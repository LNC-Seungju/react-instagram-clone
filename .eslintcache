[{"/Users/hongseungju/Desktop/react-instagram-clone/src/index.js":"1","/Users/hongseungju/Desktop/react-instagram-clone/src/App.js":"2","/Users/hongseungju/Desktop/react-instagram-clone/src/reportWebVitals.js":"3","/Users/hongseungju/Desktop/react-instagram-clone/src/Post.js":"4","/Users/hongseungju/Desktop/react-instagram-clone/src/firebase.js":"5","/Users/hongseungju/Desktop/react-instagram-clone/src/ImageUpload.js":"6"},{"size":500,"mtime":1611396439150,"results":"7","hashOfConfig":"8"},{"size":5557,"mtime":1611547517474,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611396439152,"results":"10","hashOfConfig":"8"},{"size":2014,"mtime":1611581518111,"results":"11","hashOfConfig":"8"},{"size":556,"mtime":1611543750774,"results":"12","hashOfConfig":"8"},{"size":1762,"mtime":1611543739678,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d9i4we",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/hongseungju/Desktop/react-instagram-clone/src/index.js",[],["29","30"],"/Users/hongseungju/Desktop/react-instagram-clone/src/App.js",["31"],"import React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport ImageUpload from './ImageUpload';\nimport { db, auth } from './firebase';\nimport { Button, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport InstagramEmbed from 'react-instagram-embed';\n\nimport './App.css';\n\nconst getModalStyle = () => {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    bowShadow: theme.shadows[5],\n    padding: theme.spacing(2,4,3)\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [ modalStyle ] = useState(getModalStyle);\n  const [ openSignIn, setOpenSignIn ] = useState(false);\n  const [ posts, setPosts ] = useState([]);\n  const [ open, setOpen ] = useState(false);\n  const [ username, setUsername ] = useState('');\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ user, setUser ] = useState(null);\n\n  useEffect(()=> {\n      const unsubscribe = auth.onAuthStateChanged((authUser)=> {\n      if(authUser) {\n        // User logged in\n        console.log(authUser);\n        setUser(authUser);\n\n        if( authUser.displayName ) {\n          // Do nothing\n        }\n        else {\n          // Update user\n          return authUser.updateProfile({\n            displayName: username,\n          })\n        }\n      } \n      else {\n        // User logged out\n        setUser(null);\n      }\n    })\n\n    return () => {\n      unsubscribe();\n    }\n  }, [user, username]);\n\n  useEffect(()=> {\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    })\n  }, []);\n  \n  const signUp = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(authUser => {\n        return authUser.user.updateProfile({\n          displayName: username\n        })\n      })\n      .catch((error)=> alert(error.message))\n\n      setOpen(false);\n  }\n  const signIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch(error => alert(error.message))\n    \n    setOpenSignIn(false);\n  }\n  return (\n    <div className=\"App\">\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName}/>\n      ): (\n        <h3>Sorry you need to login to upload</h3>\n      )}\n\n      <Modal\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app-signup\">\n            <Input\n              placeholder=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>SignUp</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal\n        open={openSignIn}\n        onClose={() => setOpenSignIn(false)}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app-signup\">\n            <Input\n              placeholder=\"email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>Sign In</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app-header\">\n        <div className=\"app-header-image\">\n          <img src=\"https://source.unsplash.com/random\"/>\n        </div>\n        { user? \n          (\n            <Button onClick={() => auth.signOut()}>Logout</Button>\n          ):(\n            <div className=\"app-loginContainer\">\n              <Button onClick={()=> setOpenSignIn(true)}>Sign In</Button>\n              <Button onClick={() => setOpen(true)}>Sign Up</Button>\n            </div>\n          )\n        }\n      </div>\n\n      <div className=\"app-posts\">\n        <div className=\"app-postsLeft\">\n          {\n            posts.map(({id, post}) => (\n              <Post key={id} postId={id} user={user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} />\n            ))\n          }\n        </div>\n        <div className=\"app-postsRight\">\n          <h1>InstagramEmbed Position</h1>\n          <InstagramEmbed\n            url='https://www.instagram.com/p/B_uf9dmAGPw/'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={()=> {}}\n            onSuccess={()=> {}}\n            onAfterRender={()=> {}}\n            onFailure={()=> {}}\n          />\n        </div>\n      </div>\n    </div>\n\n  );\n}\nexport default App;\n\n","/Users/hongseungju/Desktop/react-instagram-clone/src/reportWebVitals.js",[],"/Users/hongseungju/Desktop/react-instagram-clone/src/Post.js",["32"],"import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from './firebase';\nimport firebase from 'firebase';\n\nimport './Post.css';\n\nconst Post = ({ postId, user, username, imageUrl, caption }) => {\n  const [ comments, setComments ] = useState([]);\n  const [ comment, setComment ] = useState('');\n  \n  useEffect(()=> {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection('posts')\n        .doc(postId)\n        .collection('comments')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((snapshot) => {\n          setComments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n  \n  const postComment = (e) => {\n    e.preventDefault();\n\n    db.collection('posts').doc(postId).collection('comments').add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });    \n    setComment('');\n  }\n\n  return (\n    <div className=\"post\">\n      <div className=\"post-header\">\n        <Avatar \n          className=\"post-avatar\"\n          alt=\"s2ungju\"\n        />\n        <h3>{username}</h3>\n      </div>\n\n      <img className=\"post-image\" src={imageUrl}/>\n\n      <h4 className=\"post-text\"><strong>{username}</strong>{caption}</h4>\n      <div className=\"post-comments\">\n        {comments.map((comment) => (\n          <p>\n            <strong>{comment.username}</strong> {comment.text}\n          </p>\n        ))}\n      </div>\n\n      <form className=\"post-commentBox\">\n        <input\n          className=\"post-input\"\n          type=\"text\"\n          placeholder=\"Add a comment\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n        <button\n          className=\"post-button\"\n          disabled={!comment}\n          type=\"submit\"\n          onClick={postComment}\n        >\n          Post\n        </button>\n      </form>\n\n    </div>\n  )\n}\nexport default Post;","/Users/hongseungju/Desktop/react-instagram-clone/src/firebase.js",[],"/Users/hongseungju/Desktop/react-instagram-clone/src/ImageUpload.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":166,"column":11,"nodeType":"39","endLine":166,"endColumn":58},{"ruleId":"37","severity":1,"message":"38","line":51,"column":7,"nodeType":"39","endLine":51,"endColumn":51},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]